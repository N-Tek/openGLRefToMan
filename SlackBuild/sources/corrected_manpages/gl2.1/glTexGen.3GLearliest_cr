'\" t
.\"     Title: glTexGen
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 12/21/2021
.\"    Manual: { OpenGL 2.1 }
.\"    Source: pkged by Necib CAPAR(PhD.)
.\"  Language: English
.\"
.TH "GLTEXGEN" "3GLearliest" "12/21/2021" "pkged by Necib CAPAR(PhD\&.)" "{ OpenGL 2\&.1 }"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glTexGen \- control the generation of texture coordinates
.SH "C SPECIFICATION"
.HP \w'void\ glTexGeni('u
.BI "void glTexGeni(GLenum\ " "coord" ", GLenum\ " "pname" ", GLint\ " "param" ");"
.HP \w'void\ glTexGenf('u
.BI "void glTexGenf(GLenum\ " "coord" ", GLenum\ " "pname" ", GLfloat\ " "param" ");"
.HP \w'void\ glTexGend('u
.BI "void glTexGend(GLenum\ " "coord" ", GLenum\ " "pname" ", GLdouble\ " "param" ");"
.SH "PARAMETERS"
.PP
\fIcoord\fR
.RS 4
Specifies a texture coordinate\&. Must be one of
\fBGL_S\fR,
\fBGL_T\fR,
\fBGL_R\fR, or
\fBGL_Q\fR\&.
.RE
.PP
\fIpname\fR
.RS 4
Specifies the symbolic name of the texture\-coordinate generation function\&. Must be
\fBGL_TEXTURE_GEN_MODE\fR\&.
.RE
.PP
\fIparam\fR
.RS 4
Specifies a single\-valued texture generation parameter, one of
\fBGL_OBJECT_LINEAR\fR,
\fBGL_EYE_LINEAR\fR,
\fBGL_SPHERE_MAP\fR,
\fBGL_NORMAL_MAP\fR, or
\fBGL_REFLECTION_MAP\fR\&.
.RE
.SH "C SPECIFICATION"
.HP \w'void\ glTexGeniv('u
.BI "void glTexGeniv(GLenum\ " "coord" ", GLenum\ " "pname" ", const\ GLint\ *\ " "params" ");"
.HP \w'void\ glTexGenfv('u
.BI "void glTexGenfv(GLenum\ " "coord" ", GLenum\ " "pname" ", const\ GLfloat\ *\ " "params" ");"
.HP \w'void\ glTexGendv('u
.BI "void glTexGendv(GLenum\ " "coord" ", GLenum\ " "pname" ", const\ GLdouble\ *\ " "params" ");"
.SH "PARAMETERS"
.PP
\fIcoord\fR
.RS 4
Specifies a texture coordinate\&. Must be one of
\fBGL_S\fR,
\fBGL_T\fR,
\fBGL_R\fR, or
\fBGL_Q\fR\&.
.RE
.PP
\fIpname\fR
.RS 4
Specifies the symbolic name of the texture\-coordinate generation function or function parameters\&. Must be
\fBGL_TEXTURE_GEN_MODE\fR,
\fBGL_OBJECT_PLANE\fR, or
\fBGL_EYE_PLANE\fR\&.
.RE
.PP
\fIparams\fR
.RS 4
Specifies a pointer to an array of texture generation parameters\&. If
\fIpname\fR
is
\fBGL_TEXTURE_GEN_MODE\fR, then the array must contain a single symbolic constant, one of
\fBGL_OBJECT_LINEAR\fR,
\fBGL_EYE_LINEAR\fR,
\fBGL_SPHERE_MAP\fR,
\fBGL_NORMAL_MAP\fR, or
\fBGL_REFLECTION_MAP\fR\&. Otherwise,
\fIparams\fR
holds the coefficients for the texture\-coordinate generation function specified by
\fIpname\fR\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglTexGen\fR
selects a texture\-coordinate generation function or supplies coefficients for one of the functions\&.
\fIcoord\fR
names one of the (\fIs\fR,
\fIt\fR,
\fIr\fR,
\fIq\fR) texture coordinates; it must be one of the symbols
\fBGL_S\fR,
\fBGL_T\fR,
\fBGL_R\fR, or
\fBGL_Q\fR\&.
\fIpname\fR
must be one of three symbolic constants:
\fBGL_TEXTURE_GEN_MODE\fR,
\fBGL_OBJECT_PLANE\fR, or
\fBGL_EYE_PLANE\fR\&. If
\fIpname\fR
is
\fBGL_TEXTURE_GEN_MODE\fR, then
\fIparams\fR
chooses a mode, one of
\fBGL_OBJECT_LINEAR\fR,
\fBGL_EYE_LINEAR\fR,
\fBGL_SPHERE_MAP\fR,
\fBGL_NORMAL_MAP\fR, or
\fBGL_REFLECTION_MAP\fR\&. If
\fIpname\fR
is either
\fBGL_OBJECT_PLANE\fR
or
\fBGL_EYE_PLANE\fR,
\fIparams\fR
contains coefficients for the corresponding texture generation function\&.
.PP
If the texture generation function is
\fBGL_OBJECT_LINEAR\fR, the function
.PP
g = p1 \(mu xo + p2 \(mu yo + p3 \(mu zo + p4 \(mu wo
.PP
is used, where
g
is the value computed for the coordinate named in
\fIcoord\fR,
p1,
p2,
p3, and
p4
are the four values supplied in
\fIparams\fR, and
xo,
yo,
zo, and
wo
are the object coordinates of the vertex\&. This function can be used, for example, to texture\-map terrain using sea level as a reference plane (defined by
p1,
p2,
p3, and
p4)\&. The altitude of a terrain vertex is computed by the
\fBGL_OBJECT_LINEAR\fR
coordinate generation function as its distance from sea level; that altitude can then be used to index the texture image to map white snow onto peaks and green grass onto foothills\&.
.PP
If the texture generation function is
\fBGL_EYE_LINEAR\fR, the function
.PP
g = p1'' \(mu xe + p2 '' \(mu ye + p3'' \(mu ze + p4'' \(mu we
.PP
is used, where
.PP
(p1''p2''p3''p4'') = (p1p2p3p4) M^\-1
.PP
and
xe,
ye,
ze, and
we
are the eye coordinates of the vertex,
p1,
p2,
p3, and
p4
are the values supplied in
\fIparams\fR, and
M
is the modelview matrix when
\fBglTexGen\fR
is invoked\&. If
M
is poorly conditioned or singular, texture coordinates generated by the resulting function may be inaccurate or undefined\&.
.PP
Note that the values in
\fIparams\fR
define a reference plane in eye coordinates\&. The modelview matrix that is applied to them may not be the same one in effect when the polygon vertices are transformed\&. This function establishes a field of texture coordinates that can produce dynamic contour lines on moving objects\&.
.PP
If the texture generation function is
\fBGL_SPHERE_MAP\fR
and
\fIcoord\fR
is either
\fBGL_S\fR
or
\fBGL_T\fR,
s
and
t
texture coordinates are generated as follows\&. Let
\fIu\fR
be the unit vector pointing from the origin to the polygon vertex (in eye coordinates)\&. Let
\fIn\fR
sup prime be the current normal, after transformation to eye coordinates\&. Let
.PP
f = (fx fy fz)^T
be the reflection vector such that
.PP
f = u \- 2n''(n'')^T u
.PP
Finally, let
m= 2 sqrt (fx^2 % fy^2 + (fz +1)^2 )\&. Then the values assigned to the
s
and
t
texture coordinates are
.PP
    fx    1
.br
s = -- + ---
.br
    mx    2

.br
    fy    1
.br
t = -- + ---
.br
    m     2
.PP
To enable or disable a texture\-coordinate generation function, call
\fBglEnable\fR()
or
\fBglDisable\fR()
with one of the symbolic texture\-coordinate names (\fBGL_TEXTURE_GEN_S\fR,
\fBGL_TEXTURE_GEN_T\fR,
\fBGL_TEXTURE_GEN_R\fR, or
\fBGL_TEXTURE_GEN_Q\fR) as the argument\&. When enabled, the specified texture coordinate is computed according to the generating function associated with that coordinate\&. When disabled, subsequent vertices take the specified texture coordinate from the current set of texture coordinates\&. Initially, all texture generation functions are set to
\fBGL_EYE_LINEAR\fR
and are disabled\&. Both
s
plane equations are (1, 0, 0, 0), both
t
plane equations are (0, 1, 0, 0), and all
r
and
q
plane equations are (0, 0, 0, 0)\&.
.PP
When the
ARB_multitexture
extension is supported,
\fBglTexGen\fR
sets the texture generation parameters for the currently active texture unit, selected with
\fBglActiveTexture\fR()\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated when
\fIcoord\fR
or
\fIpname\fR
is not an accepted defined value, or when
\fIpname\fR
is
\fBGL_TEXTURE_GEN_MODE\fR
and
\fIparams\fR
is not an accepted defined value\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated when
\fIpname\fR
is
\fBGL_TEXTURE_GEN_MODE\fR,
\fIparams\fR
is
\fBGL_SPHERE_MAP\fR, and
\fIcoord\fR
is either
\fBGL_R\fR
or
\fBGL_Q\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fBglTexGen\fR
is executed between the execution of
\fBglBegin\fR()
and the corresponding execution of
\fBglEnd\fR()\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGetTexGen\fR()
.PP
\fBglIsEnabled\fR()
with argument
\fBGL_TEXTURE_GEN_S\fR
.PP
\fBglIsEnabled\fR()
with argument
\fBGL_TEXTURE_GEN_T\fR
.PP
\fBglIsEnabled\fR()
with argument
\fBGL_TEXTURE_GEN_R\fR
.PP
\fBglIsEnabled\fR()
with argument
\fBGL_TEXTURE_GEN_Q\fR
.SH "SEE ALSO"
.PP
\fBglActiveTexture\fR(),
\fBglCopyPixels\fR(),
\fBglCopyTexImage2D\fR(),
\fBglCopyTexSubImage1D\fR(),
\fBglCopyTexSubImage2D\fR(),
\fBglCopyTexSubImage3D\fR(),
\fBglTexEnv\fR(),
\fBglTexImage1D\fR(),
\fBglTexImage2D\fR(),
\fBglTexImage3D\fR(),
\fBglTexParameter\fR(),
\fBglTexSubImage1D\fR(),
\fBglTexSubImage2D\fR(),
\fBglTexSubImage3D\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under the SGI Free Software B License\&. For details, see
\m[blue]\fBhttps://khronos\&.org/registry/OpenGL\-Refpages/LICENSES/LicenseRef\-FreeB\&.txt\fR\m[]\&.
