'\" t
.\"     Title: glShadeModel
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 12/21/2021
.\"    Manual: { OpenGL ES 1.1 }
.\"    Source: pkged by Necib CAPAR(PhD.)
.\"  Language: English
.\"
.TH "GLSHADEMODEL" "3GLesEarliest" "12/21/2021" "pkged by Necib CAPAR(PhD\&.)" "{ OpenGL ES 1\&.1 }"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glShadeModel \- select flat or smooth shading
.SH "C SPECIFICATION"
.HP \w'void\ glShadeModel('u
.BI "void glShadeModel(GLenum\ " "mode" ");"
.SH "PARAMETERS"
.PP
\fImode\fR
.RS 4
Specifies a symbolic value representing a shading technique\&. Accepted values are
\fBGL_FLAT\fR
and
\fBGL_SMOOTH\fR\&. The initial value is
\fBGL_SMOOTH\fR\&.
.RE
.SH "DESCRIPTION"
.PP
GL primitives can have either flat or smooth shading\&. Smooth shading, the default, causes the computed colors of vertices to be interpolated as the primitive is rasterized, typically assigning different colors to each resulting pixel fragment\&. Flat shading selects the computed color of just one vertex and assigns it to all the pixel fragments generated by rasterizing a single primitive\&. In either case, the computed color of a vertex is the result of lighting if lighting is enabled, or it is the current color at the time the vertex was specified if lighting is disabled\&.
.PP
Flat and smooth shading are indistinguishable for points\&. Starting when
\fBglDrawArrays\fR()
or
\fBglDrawElements\fR()
is issued and counting vertices and primitives from 1, the GL gives each flat\-shaded line segment
i
the computed color of vertex
i + 1, its second vertex\&. Counting similarly from 1, the GL gives each flat\-shaded polygon the computed color of the vertex listed in the following table\&. This is the last vertex to specify the polygon\&.
.PP
.TS
allbox tab(:);
lB cB.
T{
\fB Primitive Type of Polygon \fR i
T}:T{
\fB Vertex \fR
T}
.T&
l c
l c
l c.
T{
Triangle strip
T}:T{
i + 2
T}
T{
Triangle fan
T}:T{
i + 2
T}
T{
Independent triangle
T}:T{
3i
T}
.TE
.sp 1
.PP
Flat and smooth shading are specified by
\fBglShadeModel\fR
with
\fImode\fR
set to
\fBGL_FLAT\fR
and
\fBGL_SMOOTH\fR, respectively\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fImode\fR
is any value other than
\fBGL_FLAT\fR
or
\fBGL_SMOOTH\fR\&.
.SH "SEE ALSO"
.PP
\fBglColor\fR(),
\fBglColorPointer\fR(),
\fBglLight\fR(),
\fBglLightModel\fR(),
\fBglMaterial\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
2003\-2004 Silicon Graphics, Inc\&. This document is licensed under the SGI Free Software B License\&. For details, see
\m[blue]\fBhttps://khronos\&.org/registry/OpenGL\-Refpages/LICENSES/LicenseRef\-FreeB\&.txt\fR\m[]\&.
