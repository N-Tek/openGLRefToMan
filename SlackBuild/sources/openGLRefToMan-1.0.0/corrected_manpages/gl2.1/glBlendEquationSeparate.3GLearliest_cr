'\" t
.\"     Title: glBlendEquationSeparate
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 12/21/2021
.\"    Manual: { OpenGL 2.1 }
.\"    Source: pkged by Necib CAPAR(PhD.)
.\"  Language: English
.\"
.TH "GLBLENDEQUATIONSEPAR" "3GLearliest" "12/21/2021" "pkged by Necib CAPAR(PhD\&.)" "{ OpenGL 2\&.1 }"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glBlendEquationSeparate \- set the RGB blend equation and the alpha blend equation separately
.SH "C SPECIFICATION"
.HP \w'void\ glBlendEquationSeparate('u
.BI "void glBlendEquationSeparate(GLenum\ " "modeRGB" ", GLenum\ " "modeAlpha" ");"
.SH "PARAMETERS"
.PP
\fImodeRGB\fR
.RS 4
specifies the RGB blend equation, how the red, green, and blue components of the source and destination colors are combined\&. It must be
\fBGL_FUNC_ADD\fR,
\fBGL_FUNC_SUBTRACT\fR,
\fBGL_FUNC_REVERSE_SUBTRACT\fR,
\fBGL_MIN\fR,
\fBGL_MAX\fR\&.
.RE
.PP
\fImodeAlpha\fR
.RS 4
specifies the alpha blend equation, how the alpha component of the source and destination colors are combined\&. It must be
\fBGL_FUNC_ADD\fR,
\fBGL_FUNC_SUBTRACT\fR,
\fBGL_FUNC_REVERSE_SUBTRACT\fR,
\fBGL_MIN\fR,
\fBGL_MAX\fR\&.
.RE
.SH "DESCRIPTION"
.PP
The blend equations determines how a new pixel (the \*(Aq\*(Aqsource\*(Aq\*(Aq color) is combined with a pixel already in the framebuffer (the \*(Aq\*(Aqdestination\*(Aq\*(Aq color)\&. This function specifies one blend equation for the RGB\-color components and one blend equation for the alpha component\&.
.PP
The blend equations use the source and destination blend factors specified by either
\fBglBlendFunc\fR()
or
\fBglBlendFuncSeparate\fR()\&. See
\fBglBlendFunc\fR()
or
\fBglBlendFuncSeparate\fR()
for a description of the various blend factors\&.
.PP
In the equations that follow, source and destination color components are referred to as
(Rs, Gs, Bs, As)
and
(Rd, Gd, Bd, Ad), respectively\&. The result color is referred to as
(Rr, Gr, Br, Ar)\&. The source and destination blend factors are denoted
(sR, sG, sB, sA)
and
(dR, dG, dB, dA), respectively\&. For these equations all color components are understood to have values in the range
[0, 1]\&.
.TS
allbox tab(:);
lB lB lB.
T{
\fB Mode \fR
T}:T{
\fB RGB Components \fR
T}:T{
\fB Alpha Component \fR
T}
.T&
l l l
l l l
l l l
l l l
l l l.
T{
\fBGL_FUNC_ADD\fR
T}:T{
.br
Rr = Rs sR + Rd dR
.br
Gr = Gs sG + Gd dG
.br
Br = Bs sB + Bd dB
.br
T}:T{

.br
Ar = As sA + Ad dA
.br
T}
T{
\fBGL_FUNC_SUBTRACT\fR
T}:T{
.br
Rr = Rs sR \- Rd dR
.br
Gr = Gs sG \- Gd dG
.br
Br = Bs sB \- Bd dB
.br
T}:T{

.br
Ar = As Sa \- Ad dA
T}
T{
\fBGL_FUNC_REVERSE_SUBTRACT\fR
T}:T{
.br
Rr = Rd dR \- Rs sR
.br
Gr = Gd dG \- Gs sG
.br
Br = Bd dB \- Bs sB
.br
T}:T{

.br
Ar = Ad dA - As sA
T}
T{
\fBGL_MIN\fR
T}:T{
Rr = min(Rs, Rd)
.br
Gr = min(Gs, Gd)
.br
Br = min(Bs, Bd)
T}:T{

.br
Ar = min(As, Ad)
T}
T{
\fBGL_MAX\fR
T}:T{
Rr = max(Rs, Rd)
.br
Gr = max(Gs, Gd)
.br
Br = max(Bs, Bd)
T}:T{

.br
Ar = min(As, Ad)
T}
.TE
.sp 1
.PP
The results of these equations are clamped to the range
[0, 1]\&.
.PP
The
\fBGL_MIN\fR
and
\fBGL_MAX\fR
equations are useful for applications that analyze image data (image thresholding against a constant color, for example)\&. The
\fBGL_FUNC_ADD\fR
equation is useful for antialiasing and transparency, among other things\&.
.PP
Initially, both the RGB blend equation and the alpha blend equation are set to
\fBGL_FUNC_ADD\fR\&.
.PP
.SH "NOTES"
.PP
\fBglBlendEquationSeparate\fR
is available only if the GL version is 2\&.0 or greater\&.
.PP
The
\fBGL_MIN\fR, and
\fBGL_MAX\fR
equations do not use the source or destination factors, only the source and destination colors\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if either
\fImodeRGB\fR
or
\fImodeAlpha\fR
is not one of
\fBGL_FUNC_ADD\fR,
\fBGL_FUNC_SUBTRACT\fR,
\fBGL_FUNC_REVERSE_SUBTRACT\fR,
\fBGL_MAX\fR, or
\fBGL_MIN\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fBglBlendEquationSeparate\fR
is executed between the execution of
\fBglBegin\fR()
and the corresponding execution of
\fBglEnd\fR()\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGet\fR()
with an argument of
\fBGL_BLEND_EQUATION_RGB\fR
.PP
\fBglGet\fR()
with an argument of
\fBGL_BLEND_EQUATION_ALPHA\fR
.SH "SEE ALSO"
.PP
\fBglGetString\fR(),
\fBglBlendColor\fR(),
\fBglBlendFunc\fR(),
\fBglBlendFuncSeparate\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
2006 Khronos Group\&. This material may be distributed subject to the terms and conditions set forth in the Open Publication License, v 1\&.0, 8 June 1999\&.
\m[blue]\fBhttp://opencontent\&.org/openpub/\fR\m[]\&.
