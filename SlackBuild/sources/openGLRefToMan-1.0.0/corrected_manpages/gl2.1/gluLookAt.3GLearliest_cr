'\" t
.\"     Title: gluLookAt
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 12/21/2021
.\"    Manual: { OpenGL 2.1 }
.\"    Source: pkged by Necib CAPAR(PhD.)
.\"  Language: English
.\"
.TH "GLULOOKAT" "3GLearliest" "12/21/2021" "pkged by Necib CAPAR(PhD\&.)" "{ OpenGL 2\&.1 }"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
gluLookAt \- define a viewing transformation
.SH "C SPECIFICATION"
.HP \w'void\ gluLookAt('u
.BI "void gluLookAt(GLdouble\ " "eyeX" ", GLdouble\ " "eyeY" ", GLdouble\ " "eyeZ" ", GLdouble\ " "centerX" ", GLdouble\ " "centerY" ", GLdouble\ " "centerZ" ", GLdouble\ " "upX" ", GLdouble\ " "upY" ", GLdouble\ " "upZ" ");"
.SH "PARAMETERS"
.PP
\fIeyeX\fR, \fIeyeY\fR, \fIeyeZ\fR
.RS 4
Specifies the position of the eye point\&.
.RE
.PP
\fIcenterX\fR, \fIcenterY\fR, \fIcenterZ\fR
.RS 4
Specifies the position of the reference point\&.
.RE
.PP
\fIupX\fR, \fIupY\fR, \fIupZ\fR
.RS 4
Specifies the direction of the
\fIup\fR
vector\&.
.RE
.SH "DESCRIPTION"
.PP
\fBgluLookAt\fR
creates a viewing matrix derived from an eye point, a reference point indicating the center of the scene, and an
\fIUP\fR
vector\&.
.PP
The matrix maps the reference point to the negative
\fIz\fR
axis and the eye point to the origin\&. When a typical projection matrix is used, the center of the scene therefore maps to the center of the viewport\&. Similarly, the direction described by the
\fIUP\fR
vector projected onto the viewing plane is mapped to the positive
\fIy\fR
axis so that it points upward in the viewport\&. The
\fIUP\fR
vector must not be parallel to the line of sight from the eye point to the reference point\&.
.PP
Let
.PP
        ( centerX \- eyeX )
.br
    F = ( centerY \- eyeY )
.br
        ( centerZ \- eyeZ )
.PP
.PP
Let
\fIUP\fR
be the vector
(upX, upY, upZ)\&.
.PP
Then normalize as follows:
          F
.br
    f = -----
.br
        ||F||
.PP
             UP
.br
    UP'' = ------
.br
           ||UP||
.PP
Finally, let
s = f \(mu UP'', and
.br
            s
.br
    u = ( ----- ) \(mu f
.br
          ||s||
.PP
M is then constructed as follows:
.PP
        (  s[0]    s[1]    s[2]   0 )
.br
    M = (  u[0]    u[1]    u[2]   0 )
.br
        ( \-f[0]   \-f[1]   \-f[2]   0 )
.br
        (    0       0       0    0 )
.PP
and
\fBgluLookAt\fR
is equivalent to
.sp
.if n \{\
.RS 4
.\}
.nf
glMultMatrixf(M);
glTranslated(\-eyex, \-eyey, \-eyez);
            
.fi
.if n \{\
.RE
.\}
.sp
.SH "SEE ALSO"
.PP
\fBgluPerspective\fR(),
\fBglFrustum\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under the SGI Free Software B License\&. For details, see
\m[blue]\fBhttps://khronos\&.org/registry/OpenGL\-Refpages/LICENSES/LicenseRef\-FreeB\&.txt\fR\m[]\&.
