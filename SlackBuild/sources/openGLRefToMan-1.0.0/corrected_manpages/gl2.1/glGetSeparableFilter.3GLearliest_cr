'\" t
.\"     Title: glGetSeparableFilter
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 12/21/2021
.\"    Manual: { OpenGL 2.1 }
.\"    Source: pkged by Necib CAPAR(PhD.)
.\"  Language: English
.\"
.TH "GLGETSEPARABLEFILTER" "3GLearliest" "12/21/2021" "pkged by Necib CAPAR(PhD\&.)" "{ OpenGL 2\&.1 }"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
glGetSeparableFilter \- get separable convolution filter kernel images
.SH "C SPECIFICATION"
.HP \w'void\ glGetSeparableFilter('u
.BI "void glGetSeparableFilter(GLenum\ " "target" ", GLenum\ " "format" ", GLenum\ " "type" ", void\ *\ " "row" ", void\ *\ " "column" ", void\ *\ " "span" ");"
.SH "PARAMETERS"
.PP
\fItarget\fR
.RS 4
The separable filter to be retrieved\&. Must be
\fBGL_SEPARABLE_2D\fR\&.
.RE
.PP
\fIformat\fR
.RS 4
Format of the output images\&. Must be one of
\fBGL_RED\fR,
\fBGL_GREEN\fR,
\fBGL_BLUE\fR,
\fBGL_ALPHA\fR,
\fBGL_RGB\fR,
\fBGL_BGR\fR\fBGL_RGBA\fR,
\fBGL_BGRA\fR,
\fBGL_LUMINANCE\fR, or
\fBGL_LUMINANCE_ALPHA\fR\&.
.RE
.PP
\fItype\fR
.RS 4
Data type of components in the output images\&. Symbolic constants
\fBGL_UNSIGNED_BYTE\fR,
\fBGL_BYTE\fR,
\fBGL_BITMAP\fR,
\fBGL_UNSIGNED_SHORT\fR,
\fBGL_SHORT\fR,
\fBGL_UNSIGNED_INT\fR,
\fBGL_INT\fR,
\fBGL_FLOAT\fR,
\fBGL_UNSIGNED_BYTE_3_3_2\fR,
\fBGL_UNSIGNED_BYTE_2_3_3_REV\fR,
\fBGL_UNSIGNED_SHORT_5_6_5\fR,
\fBGL_UNSIGNED_SHORT_5_6_5_REV\fR,
\fBGL_UNSIGNED_SHORT_4_4_4_4\fR,
\fBGL_UNSIGNED_SHORT_4_4_4_4_REV\fR,
\fBGL_UNSIGNED_SHORT_5_5_5_1\fR,
\fBGL_UNSIGNED_SHORT_1_5_5_5_REV\fR,
\fBGL_UNSIGNED_INT_8_8_8_8\fR,
\fBGL_UNSIGNED_INT_8_8_8_8_REV\fR,
\fBGL_UNSIGNED_INT_10_10_10_2\fR, and
\fBGL_UNSIGNED_INT_2_10_10_10_REV\fR
are accepted\&.
.RE
.PP
\fIrow\fR
.RS 4
Pointer to storage for the row filter image\&.
.RE
.PP
\fIcolumn\fR
.RS 4
Pointer to storage for the column filter image\&.
.RE
.PP
\fIspan\fR
.RS 4
Pointer to storage for the span filter image (currently unused)\&.
.RE
.SH "DESCRIPTION"
.PP
\fBglGetSeparableFilter\fR
returns the two one\-dimensional filter kernel images for the current separable 2D convolution filter\&. The row image is placed in
\fIrow\fR
and the column image is placed in
\fIcolumn\fR
according to the specifications in
\fIformat\fR
and
\fItype\fR\&. (In the current implementation,
\fIspan\fR
is not affected in any way\&.) No pixel transfer operations are performed on the images, but the relevant pixel storage modes are applied\&.
.PP
If a non\-zero named buffer object is bound to the
\fBGL_PIXEL_PACK_BUFFER\fR
target (see
\fBglBindBuffer\fR()) while a separable convolution filter is requested,
\fIrow\fR,
\fIcolumn\fR, and
\fIspan\fR
are treated as a byte offset into the buffer object\*(Aqs data store\&.
.PP
Color components that are present in
\fIformat\fR
but not included in the internal format of the filters are returned as zero\&. The assignments of internal color components to the components of
\fIformat\fR
are as follows:
.PP
.TS
allbox tab(:);
cB cB.
T{
\fB Internal Component \fR
T}:T{
\fB Resulting Component \fR
T}
.T&
l l
l l
l l
l l
l l
l l.
T{
Red
T}:T{
Red
T}
T{
Green
T}:T{
Green
T}
T{
Blue
T}:T{
Blue
T}
T{
Alpha
T}:T{
Alpha
T}
T{
Luminance
T}:T{
Red
T}
T{
Intensity
T}:T{
Red
T}
.TE
.sp 1
.PP
.SH "NOTES"
.PP
\fBglGetSeparableFilter\fR
is present only if
ARB_imaging
is returned when
\fBglGetString\fR()
is called with an argument of
\fBGL_EXTENSIONS\fR\&.
.PP
Non\-separable 2D filters must be retrieved with
\fBglGetConvolutionFilter\fR()\&.
.SH "ERRORS"
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fItarget\fR
is not
\fBGL_SEPARABLE_2D\fR\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fIformat\fR
is not one of the allowable values\&.
.PP
\fBGL_INVALID_ENUM\fR
is generated if
\fItype\fR
is not one of the allowable values\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fItype\fR
is one of
\fBGL_UNSIGNED_BYTE_3_3_2\fR,
\fBGL_UNSIGNED_BYTE_2_3_3_REV\fR,
\fBGL_UNSIGNED_SHORT_5_6_5\fR, or
\fBGL_UNSIGNED_SHORT_5_6_5_REV\fR
and
\fIformat\fR
is not
\fBGL_RGB\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fItype\fR
is one of
\fBGL_UNSIGNED_SHORT_4_4_4_4\fR,
\fBGL_UNSIGNED_SHORT_4_4_4_4_REV\fR,
\fBGL_UNSIGNED_SHORT_5_5_5_1\fR,
\fBGL_UNSIGNED_SHORT_1_5_5_5_REV\fR,
\fBGL_UNSIGNED_INT_8_8_8_8\fR,
\fBGL_UNSIGNED_INT_8_8_8_8_REV\fR,
\fBGL_UNSIGNED_INT_10_10_10_2\fR, or
\fBGL_UNSIGNED_INT_2_10_10_10_REV\fR
and
\fIformat\fR
is neither
\fBGL_RGBA\fR
nor
\fBGL_BGRA\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a non\-zero buffer object name is bound to the
\fBGL_PIXEL_PACK_BUFFER\fR
target and the buffer object\*(Aqs data store is currently mapped\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a non\-zero buffer object name is bound to the
\fBGL_PIXEL_PACK_BUFFER\fR
target and the data would be packed to the buffer object such that the memory writes required would exceed the data store size\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if a non\-zero buffer object name is bound to the
\fBGL_PIXEL_PACK_BUFFER\fR
target and
\fIrow\fR
or
\fIcolumn\fR
is not evenly divisible into the number of bytes needed to store in memory a datum indicated by
\fItype\fR\&.
.PP
\fBGL_INVALID_OPERATION\fR
is generated if
\fBglGetSeparableFilter\fR
is executed between the execution of
\fBglBegin\fR()
and the corresponding execution of
\fBglEnd\fR()\&.
.SH "ASSOCIATED GETS"
.PP
\fBglGetConvolutionParameter\fR()
.PP
\fBglGet\fR()
with argument
\fBGL_PIXEL_PACK_BUFFER_BINDING\fR
.SH "SEE ALSO"
.PP
\fBglGetConvolutionFilter\fR(),
\fBglConvolutionParameter\fR(),
\fBglSeparableFilter2D\fR()
.SH "COPYRIGHT"
.PP
Copyright
\(co
1991\-2006 Silicon Graphics, Inc\&. This document is licensed under the SGI Free Software B License\&. For details, see
\m[blue]\fBhttps://khronos\&.org/registry/OpenGL\-Refpages/LICENSES/LicenseRef\-FreeB\&.txt\fR\m[]\&.
